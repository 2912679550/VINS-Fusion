%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/camera/imu"
image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"
output_path: "/home/dji/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 1, 0, 0, -0.00552,
#            0, 1, 0, 0.0051,
#            0, 0, 1, 0.01174,
#            0, 0, 0, 1 ]

# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ 1, 0, 0, 0.0446571,
#            0, 1, 0, 0.0051,
#            0, 0, 1, 0.01174,
#            0, 0, 0, 1 ]
# 250626标定结果
body_T_cam0: !!opencv-matrix    # 左目
   rows: 4
   cols: 4
   dt: d
   data: [ 0.99964689 , 0.01078794, -0.02428392, -0.02309661,
           -0.01117995 , 0.99980844 ,-0.01606518 ,-0.00935876,
           0.02410596 , 0.016331  ,  0.99957601 , 0.02597562,
           0, 0, 0, 1 ]

body_T_cam1: !!opencv-matrix    # 右目
   rows: 4
   cols: 4
   dt: d
   data: [ 0.99994163,  0.00889228 , 0.0061364 ,  0.02721194,
           -0.00881977 , 0.99989214, -0.01174355, -0.0102691,
           -0.00624017 , 0.01168875 , 0.99991221 , 0.0258626,
           0, 0, 0, 1 ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 2.1816988780323721e-02          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 3.0702991209586293e-03         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 8.1388753164017514e-04         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 2.1144620101483558e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

        # gyr_n: 3.0702991209586293e-03
        # gyr_w: 2.1144620101483558e-05
        # acc_n: 2.1816988780323721e-02
        # acc_w: 8.1388753164017514e-04

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/robot/bot105_ws/pose-graph/" # save and load path
save_image: 1                  # save image in pose graph for visualization prupose; you can close this function by setting 0 